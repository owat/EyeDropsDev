#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EyeDropsDev
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataSource")]
	public partial class eyeDropsDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAppPricing(AppPricing instance);
    partial void UpdateAppPricing(AppPricing instance);
    partial void DeleteAppPricing(AppPricing instance);
    partial void InsertDrug(Drug instance);
    partial void UpdateDrug(Drug instance);
    partial void DeleteDrug(Drug instance);
    partial void InsertDrugType(DrugType instance);
    partial void UpdateDrugType(DrugType instance);
    partial void DeleteDrugType(DrugType instance);
    partial void InsertEyeDiseasesMaster(EyeDiseasesMaster instance);
    partial void UpdateEyeDiseasesMaster(EyeDiseasesMaster instance);
    partial void DeleteEyeDiseasesMaster(EyeDiseasesMaster instance);
    partial void InsertGlaucomaTypeMaster(GlaucomaTypeMaster instance);
    partial void UpdateGlaucomaTypeMaster(GlaucomaTypeMaster instance);
    partial void DeleteGlaucomaTypeMaster(GlaucomaTypeMaster instance);
    partial void InsertManager(Manager instance);
    partial void UpdateManager(Manager instance);
    partial void DeleteManager(Manager instance);
    partial void InsertManufacturer(Manufacturer instance);
    partial void UpdateManufacturer(Manufacturer instance);
    partial void DeleteManufacturer(Manufacturer instance);
    partial void InsertManufacturerType(ManufacturerType instance);
    partial void UpdateManufacturerType(ManufacturerType instance);
    partial void DeleteManufacturerType(ManufacturerType instance);
    partial void InsertMedicineMaster(MedicineMaster instance);
    partial void UpdateMedicineMaster(MedicineMaster instance);
    partial void DeleteMedicineMaster(MedicineMaster instance);
    partial void InsertMedicineType(MedicineType instance);
    partial void UpdateMedicineType(MedicineType instance);
    partial void DeleteMedicineType(MedicineType instance);
    partial void InsertOtherDiseasesMaster(OtherDiseasesMaster instance);
    partial void UpdateOtherDiseasesMaster(OtherDiseasesMaster instance);
    partial void DeleteOtherDiseasesMaster(OtherDiseasesMaster instance);
    partial void InsertSalesPerson(SalesPerson instance);
    partial void UpdateSalesPerson(SalesPerson instance);
    partial void DeleteSalesPerson(SalesPerson instance);
    partial void InsertSalesReport(SalesReport instance);
    partial void UpdateSalesReport(SalesReport instance);
    partial void DeleteSalesReport(SalesReport instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserGlaucomaDetail(UserGlaucomaDetail instance);
    partial void UpdateUserGlaucomaDetail(UserGlaucomaDetail instance);
    partial void DeleteUserGlaucomaDetail(UserGlaucomaDetail instance);
    partial void InsertUserMedicine(UserMedicine instance);
    partial void UpdateUserMedicine(UserMedicine instance);
    partial void DeleteUserMedicine(UserMedicine instance);
    partial void InsertUserMedicineSchedule(UserMedicineSchedule instance);
    partial void UpdateUserMedicineSchedule(UserMedicineSchedule instance);
    partial void DeleteUserMedicineSchedule(UserMedicineSchedule instance);
    partial void InsertUserMedicineScheduleData(UserMedicineScheduleData instance);
    partial void UpdateUserMedicineScheduleData(UserMedicineScheduleData instance);
    partial void DeleteUserMedicineScheduleData(UserMedicineScheduleData instance);
    partial void InsertUserType(UserType instance);
    partial void UpdateUserType(UserType instance);
    partial void DeleteUserType(UserType instance);
    #endregion
		
		public eyeDropsDbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DataSourceConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public eyeDropsDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public eyeDropsDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public eyeDropsDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public eyeDropsDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AppPricing> AppPricings
		{
			get
			{
				return this.GetTable<AppPricing>();
			}
		}
		
		public System.Data.Linq.Table<ConnectedUser> ConnectedUsers
		{
			get
			{
				return this.GetTable<ConnectedUser>();
			}
		}
		
		public System.Data.Linq.Table<Drug> Drugs
		{
			get
			{
				return this.GetTable<Drug>();
			}
		}
		
		public System.Data.Linq.Table<DrugType> DrugTypes
		{
			get
			{
				return this.GetTable<DrugType>();
			}
		}
		
		public System.Data.Linq.Table<EyeDiseasesMaster> EyeDiseasesMasters
		{
			get
			{
				return this.GetTable<EyeDiseasesMaster>();
			}
		}
		
		public System.Data.Linq.Table<EyeSurgeryMaster> EyeSurgeryMasters
		{
			get
			{
				return this.GetTable<EyeSurgeryMaster>();
			}
		}
		
		public System.Data.Linq.Table<GlaucomaTypeMaster> GlaucomaTypeMasters
		{
			get
			{
				return this.GetTable<GlaucomaTypeMaster>();
			}
		}
		
		public System.Data.Linq.Table<HistoryList> HistoryLists
		{
			get
			{
				return this.GetTable<HistoryList>();
			}
		}
		
		public System.Data.Linq.Table<HistoryTable> HistoryTables
		{
			get
			{
				return this.GetTable<HistoryTable>();
			}
		}
		
		public System.Data.Linq.Table<IOP> IOPs
		{
			get
			{
				return this.GetTable<IOP>();
			}
		}
		
		public System.Data.Linq.Table<Manager> Managers
		{
			get
			{
				return this.GetTable<Manager>();
			}
		}
		
		public System.Data.Linq.Table<Manufacturer> Manufacturers
		{
			get
			{
				return this.GetTable<Manufacturer>();
			}
		}
		
		public System.Data.Linq.Table<ManufacturerType> ManufacturerTypes
		{
			get
			{
				return this.GetTable<ManufacturerType>();
			}
		}
		
		public System.Data.Linq.Table<MedicineManufacturer> MedicineManufacturers
		{
			get
			{
				return this.GetTable<MedicineManufacturer>();
			}
		}
		
		public System.Data.Linq.Table<MedicineMaster> MedicineMasters
		{
			get
			{
				return this.GetTable<MedicineMaster>();
			}
		}
		
		public System.Data.Linq.Table<MedicineSize> MedicineSizes
		{
			get
			{
				return this.GetTable<MedicineSize>();
			}
		}
		
		public System.Data.Linq.Table<MedicineStrength> MedicineStrengths
		{
			get
			{
				return this.GetTable<MedicineStrength>();
			}
		}
		
		public System.Data.Linq.Table<MedicineStrengthSize> MedicineStrengthSizes
		{
			get
			{
				return this.GetTable<MedicineStrengthSize>();
			}
		}
		
		public System.Data.Linq.Table<MedicineType> MedicineTypes
		{
			get
			{
				return this.GetTable<MedicineType>();
			}
		}
		
		public System.Data.Linq.Table<OtherDiseasesMaster> OtherDiseasesMasters
		{
			get
			{
				return this.GetTable<OtherDiseasesMaster>();
			}
		}
		
		public System.Data.Linq.Table<OtherManufacturer> OtherManufacturers
		{
			get
			{
				return this.GetTable<OtherManufacturer>();
			}
		}
		
		public System.Data.Linq.Table<SalesPerson> SalesPersons
		{
			get
			{
				return this.GetTable<SalesPerson>();
			}
		}
		
		public System.Data.Linq.Table<SalesReport> SalesReports
		{
			get
			{
				return this.GetTable<SalesReport>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedules
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleItem> ScheduleItems
		{
			get
			{
				return this.GetTable<ScheduleItem>();
			}
		}
		
		public System.Data.Linq.Table<Surgery> Surgeries
		{
			get
			{
				return this.GetTable<Surgery>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserDisease> UserDiseases
		{
			get
			{
				return this.GetTable<UserDisease>();
			}
		}
		
		public System.Data.Linq.Table<UserGlaucomaDetail> UserGlaucomaDetails
		{
			get
			{
				return this.GetTable<UserGlaucomaDetail>();
			}
		}
		
		public System.Data.Linq.Table<UserMedicine> UserMedicines
		{
			get
			{
				return this.GetTable<UserMedicine>();
			}
		}
		
		public System.Data.Linq.Table<UserMedicineSchedule> UserMedicineSchedules
		{
			get
			{
				return this.GetTable<UserMedicineSchedule>();
			}
		}
		
		public System.Data.Linq.Table<UserMedicineScheduleData> UserMedicineScheduleDatas
		{
			get
			{
				return this.GetTable<UserMedicineScheduleData>();
			}
		}
		
		public System.Data.Linq.Table<UserPastMedicine> UserPastMedicines
		{
			get
			{
				return this.GetTable<UserPastMedicine>();
			}
		}
		
		public System.Data.Linq.Table<UserType> UserTypes
		{
			get
			{
				return this.GetTable<UserType>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Insert_Registration", IsComposable=true)]
		public object Insert_Registration([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> gender, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dob, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string timezone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), firstName, lastName, gender, dob, email, password, userType, timezone, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(8)));
			return ((object)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Select_MedicineInfo")]
		public ISingleResult<Select_MedicineInfoResult> Select_MedicineInfo()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Select_MedicineInfoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Inner")]
		public ISingleResult<SP_InnerResult> SP_Inner([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> to)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, to);
			return ((ISingleResult<SP_InnerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Outer", IsComposable=true)]
		public object SP_Outer([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> todate)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, fromdate, todate).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Test_SP", IsComposable=true)]
		public object Test_SP([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date2)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId, date1, date2).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Users_UserId", IsComposable=true)]
		public object usp_Users_UserId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string email)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Test_usp_UserMedicines_Add")]
		public int Test_usp_UserMedicines_Add(
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userid, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> medicineId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string strength, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string size, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eye, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="for", DbType="VarChar(100)")] string @for, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> startingFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> ending, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string image, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string manufacturer, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> noOfBottles, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsSync", DbType="Bit")] System.Nullable<bool> isSync, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> duetime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsOther", DbType="Bit")] System.Nullable<bool> isOther, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicineName", DbType="VarChar(100)")] string medicineName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string type, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userid, medicineId, strength, size, eye, @for, startingFrom, ending, image, manufacturer, noOfBottles, isSync, duetime, isOther, medicineName, type, result);
			result = ((System.Nullable<long>)(result1.GetParameterValue(16)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Test_usp_UserMedicines_Add1")]
		public int Test_usp_UserMedicines_Add1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> medicineId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string strength, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string size, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eye, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="for", DbType="VarChar(100)")] string @for, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> startingFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> ending, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string image, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string manufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> noOfBottles, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsSync", DbType="Bit")] System.Nullable<bool> isSync, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> duetime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userid, medicineId, strength, size, eye, @for, startingFrom, ending, image, manufacturer, noOfBottles, isSync, duetime, result);
			result = ((System.Nullable<long>)(result1.GetParameterValue(13)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Test_usp_UserMedicines_AddForFamily")]
		public int Test_usp_UserMedicines_AddForFamily([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> medicineId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string strength, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string size, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eye, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="for", DbType="VarChar(100)")] string @for, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> startingFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> ending, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string image, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string manufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> noOfBottles, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsSync", DbType="Bit")] System.Nullable<bool> isSync, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userid, medicineId, strength, size, eye, @for, startingFrom, ending, image, manufacturer, noOfBottles, isSync, result);
			result = ((System.Nullable<long>)(result1.GetParameterValue(12)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.User_Authentication", IsComposable=true)]
		public object User_Authentication([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(250)")] string tokenValue, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string os)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, password, tokenValue, userType, os).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.User_Authentication_new", IsComposable=true)]
		public object User_Authentication_new([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(250)")] string tokenValue, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string os, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string salesCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, password, tokenValue, userType, os, salesCode, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(6)));
			return ((object)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.User_Authentication_new_salesVerify", IsComposable=true)]
		public object User_Authentication_new_salesVerify([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(250)")] string tokenValue, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string os, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(5)")] string salesCode)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, password, tokenValue, userType, os, salesCode).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.User_AuthenticationForPremium", IsComposable=true)]
		public object User_AuthenticationForPremium([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string password)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, password).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.User_ForgotPassword", IsComposable=true)]
		public object User_ForgotPassword([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string email)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserMedicineSchedule_Add")]
		public int UserMedicineSchedule_Add([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> usermedicineId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string timelist, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usermedicineId, timelist, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(2)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Add_AppPrice")]
		public int usp_Add_AppPrice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Version", DbType="VarChar(20)")] string version, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Platform", DbType="VarChar(50)")] string platform, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AffectiveFrom", DbType="DateTime")] System.Nullable<System.DateTime> affectiveFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), version, platform, price, affectiveFrom, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(4)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Add_Manager")]
		public int usp_Add_Manager([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="VarChar(50)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="VarChar(50)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailId", DbType="VarChar(50)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConatctNo", DbType="VarChar(50)")] string conatctNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ModfiedDate", DbType="DateTime")] System.Nullable<System.DateTime> modfiedDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), firstName, lastName, emailId, conatctNo, isActive, modfiedDate, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(6)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Add_SalesPerson")]
		public int usp_Add_SalesPerson([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="VarChar(50)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="VarChar(50)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailId", DbType="VarChar(50)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConatctNo", DbType="VarChar(50)")] string conatctNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="VarChar(50)")] string isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesRepsCode", DbType="VarChar(10)")] string salesRepsCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManagerId", DbType="VarChar(5)")] string managerId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), firstName, lastName, emailId, conatctNo, isActive, salesRepsCode, managerId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(7)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AppPricing_GetAll")]
		public ISingleResult<usp_AppPricing_GetAllResult> usp_AppPricing_GetAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_AppPricing_GetAllResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_ComplianceDifferentUsers", IsComposable=true)]
		public object usp_ComplianceDifferentUsers()
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Delete_AppPrice")]
		public int usp_Delete_AppPrice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Diseases_Delete")]
		public int usp_Diseases_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_EyeDiseaseMaster_Select")]
		public ISingleResult<usp_EyeDiseaseMaster_SelectResult> usp_EyeDiseaseMaster_Select()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_EyeDiseaseMaster_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_EyeSurgeryMaster_Select")]
		public ISingleResult<usp_EyeSurgeryMaster_SelectResult> usp_EyeSurgeryMaster_Select()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_EyeSurgeryMaster_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetAppPriceById")]
		public ISingleResult<usp_GetAppPriceByIdResult> usp_GetAppPriceById([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(1)));
			return ((ISingleResult<usp_GetAppPriceByIdResult>)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetBulkEmailIdNew", IsComposable=true)]
		public object usp_GetBulkEmailIdNew([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ostype)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ostype).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetExpireInfo", IsComposable=true)]
		public object usp_GetExpireInfo([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string email)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetManagerWithId")]
		public ISingleResult<usp_GetManagerWithIdResult> usp_GetManagerWithId()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_GetManagerWithIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetMangerById")]
		public ISingleResult<usp_GetMangerByIdResult> usp_GetMangerById([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(1)));
			return ((ISingleResult<usp_GetMangerByIdResult>)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetSAlesPersonById")]
		public ISingleResult<usp_GetSAlesPersonByIdResult> usp_GetSAlesPersonById([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(1)));
			return ((ISingleResult<usp_GetSAlesPersonByIdResult>)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetSummary", IsComposable=true)]
		public object usp_GetSummary()
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetUsersReport", IsComposable=true)]
		public object usp_GetUsersReport([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> to)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, to).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GlaucomaMAster_Select")]
		public ISingleResult<usp_GlaucomaMAster_SelectResult> usp_GlaucomaMAster_Select()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_GlaucomaMAster_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_HistoryList_FilterByDate")]
		public ISingleResult<usp_HistoryList_FilterByDateResult> usp_HistoryList_FilterByDate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, type);
			return ((ISingleResult<usp_HistoryList_FilterByDateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_HistoryList_GetComplianceData", IsComposable=true)]
		public object usp_HistoryList_GetComplianceData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string emailid)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailid).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_HistoryList_SyncData")]
		public int usp_HistoryList_SyncData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> usermedicineId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> duetime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> lasttaken, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usermedicineId, duetime, lasttaken, status, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(4)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_HistoryList_SyncData11")]
		public int usp_HistoryList_SyncData11([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> usermedicineId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> duetime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> lasttaken, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string timing, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usermedicineId, duetime, lasttaken, status, timing, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(5)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_HistoryListResponse", IsComposable=true)]
		public object usp_HistoryListResponse([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string emailId)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_HistoryListResponseNew", IsComposable=true)]
		public object usp_HistoryListResponseNew([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string emailId)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_HistoryTable_FilterByDate")]
		public ISingleResult<usp_HistoryTable_FilterByDateResult> usp_HistoryTable_FilterByDate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, type);
			return ((ISingleResult<usp_HistoryTable_FilterByDateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_HistoryTable_GetComplianceData", IsComposable=true)]
		public object usp_HistoryTable_GetComplianceData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string emailid)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailid).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_HistoryTable_GetComplianceData1", IsComposable=true)]
		public object usp_HistoryTable_GetComplianceData1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string emailid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date2)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailid, date1, date2).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_HistoryTable_GetComplianceMedicines", IsComposable=true)]
		public object usp_HistoryTable_GetComplianceMedicines([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string emailid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> to)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailid, from, to).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_HistoryTable_SyncData")]
		public int usp_HistoryTable_SyncData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> usermedicineId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> duetime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> lasttaken, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usermedicineId, duetime, lasttaken, status, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(4)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_HistoryTable_SyncDataNew")]
		public int usp_HistoryTable_SyncDataNew([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> usermedicineId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> duetime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> lasttaken, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usermedicineId, duetime, lasttaken, status, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(4)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_IOP_FilterByDate")]
		public ISingleResult<usp_IOP_FilterByDateResult> usp_IOP_FilterByDate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, type);
			return ((ISingleResult<usp_IOP_FilterByDateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_IOP_Insert")]
		public ISingleResult<usp_IOP_InsertResult> usp_IOP_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string rightEye, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string leftEye, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, rightEye, leftEye, date, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(4)));
			return ((ISingleResult<usp_IOP_InsertResult>)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_IOP_View")]
		public ISingleResult<usp_IOP_ViewResult> usp_IOP_View([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<usp_IOP_ViewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Manager_Delete")]
		public int usp_Manager_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Manager_GetAll")]
		public ISingleResult<usp_Manager_GetAllResult> usp_Manager_GetAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_Manager_GetAllResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_MedicineMaster_Manufacturer")]
		public ISingleResult<usp_MedicineMaster_ManufacturerResult> usp_MedicineMaster_Manufacturer([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, type);
			return ((ISingleResult<usp_MedicineMaster_ManufacturerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_MedicineMaster_MedicineId")]
		public ISingleResult<usp_MedicineMaster_MedicineIdResult> usp_MedicineMaster_MedicineId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, type);
			return ((ISingleResult<usp_MedicineMaster_MedicineIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_MedicineMaster_SelectId")]
		public ISingleResult<usp_MedicineMaster_SelectIdResult> usp_MedicineMaster_SelectId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<usp_MedicineMaster_SelectIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_MedicineMaster_SelectList")]
		public ISingleResult<usp_MedicineMaster_SelectListResult> usp_MedicineMaster_SelectList()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_MedicineMaster_SelectListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_MedicineScheduleTimings")]
		public ISingleResult<usp_MedicineScheduleTimingsResult> usp_MedicineScheduleTimings([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<usp_MedicineScheduleTimingsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_MedicineSize_Size")]
		public ISingleResult<usp_MedicineSize_SizeResult> usp_MedicineSize_Size([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string medicineName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medicineName);
			return ((ISingleResult<usp_MedicineSize_SizeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_MedicineStrength_Strength")]
		public ISingleResult<usp_MedicineStrength_StrengthResult> usp_MedicineStrength_Strength([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string medicineName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> medicineType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medicineName, medicineType);
			return ((ISingleResult<usp_MedicineStrength_StrengthResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_MedicineStrengthSize_Size")]
		public ISingleResult<usp_MedicineStrengthSize_SizeResult> usp_MedicineStrengthSize_Size([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string medicineName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> medicineType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string strength)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medicineName, medicineType, strength);
			return ((ISingleResult<usp_MedicineStrengthSize_SizeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_MedicineStrengthSize_Strength")]
		public ISingleResult<usp_MedicineStrengthSize_StrengthResult> usp_MedicineStrengthSize_Strength([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string medicineName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> medicineType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medicineName, medicineType);
			return ((ISingleResult<usp_MedicineStrengthSize_StrengthResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_MedicineStrengthSize_StrengthSize")]
		public ISingleResult<usp_MedicineStrengthSize_StrengthSizeResult> usp_MedicineStrengthSize_StrengthSize([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string medicineName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> medicineType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medicineName, medicineType);
			return ((ISingleResult<usp_MedicineStrengthSize_StrengthSizeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_MedicineType_Type")]
		public ISingleResult<usp_MedicineType_TypeResult> usp_MedicineType_Type([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string medicineName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medicineName);
			return ((ISingleResult<usp_MedicineType_TypeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_MedicineType_TypeId")]
		public ISingleResult<usp_MedicineType_TypeIdResult> usp_MedicineType_TypeId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type);
			return ((ISingleResult<usp_MedicineType_TypeIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_MyMedsData")]
		public ISingleResult<usp_MyMedsDataResult> usp_MyMedsData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userid);
			return ((ISingleResult<usp_MyMedsDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_OtherDisease_Select")]
		public ISingleResult<usp_OtherDisease_SelectResult> usp_OtherDisease_Select()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_OtherDisease_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Sales_GetAll")]
		public ISingleResult<usp_Sales_GetAllResult> usp_Sales_GetAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_Sales_GetAllResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SalesPerson_Delete")]
		public int usp_SalesPerson_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SalesReport")]
		public ISingleResult<usp_SalesReportResult> usp_SalesReport([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> startdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> enddate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startdate, enddate);
			return ((ISingleResult<usp_SalesReportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Select_HistoryData", IsComposable=true)]
		public object usp_Select_HistoryData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date2)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId, date1, date2).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Select_HistoryData1", IsComposable=true)]
		public object usp_Select_HistoryData1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date2)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId, date1, date2).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Select_HistoryDataWebSite", IsComposable=true)]
		public object usp_Select_HistoryDataWebSite([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date2)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId, date1, date2).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectMedicineImages")]
		public ISingleResult<usp_SelectMedicineImagesResult> usp_SelectMedicineImages([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<usp_SelectMedicineImagesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectPrevDayData")]
		public ISingleResult<usp_SelectPrevDayDataResult> usp_SelectPrevDayData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> to)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, from, to);
			return ((ISingleResult<usp_SelectPrevDayDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectTimeSchedules")]
		public ISingleResult<usp_SelectTimeSchedulesResult> usp_SelectTimeSchedules([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnBehalf", DbType="VarChar(100)")] string onBehalf)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, onBehalf);
			return ((ISingleResult<usp_SelectTimeSchedulesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectTodayTabData")]
		public ISingleResult<usp_SelectTodayTabDataResult> usp_SelectTodayTabData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<usp_SelectTodayTabDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SetIsEnabled", IsComposable=true)]
		public object usp_SetIsEnabled([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(1)));
			return ((object)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Surgery_Delete")]
		public int usp_Surgery_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Surgery_Insert")]
		public int usp_Surgery_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string surgeryName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eye, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> surgeryDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, surgeryName, eye, surgeryDate, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(4)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Surgery_View")]
		public ISingleResult<usp_Surgery_ViewResult> usp_Surgery_View([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<usp_Surgery_ViewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_update_AppPrice")]
		public int usp_update_AppPrice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Version", DbType="VarChar(20)")] string version, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Platform", DbType="VarChar(50)")] string platform, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AffectiveFrom", DbType="DateTime")] System.Nullable<System.DateTime> affectiveFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, version, platform, price, affectiveFrom, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(5)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_update_Manager")]
		public int usp_update_Manager([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="VarChar(50)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="VarChar(50)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailId", DbType="VarChar(50)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConatctNo", DbType="VarChar(50)")] string conatctNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ModfiedDate", DbType="DateTime")] System.Nullable<System.DateTime> modfiedDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, firstName, lastName, emailId, conatctNo, isActive, modfiedDate, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(7)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_update_SalesPerson")]
		public int usp_update_SalesPerson([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="VarChar(50)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="VarChar(50)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailId", DbType="VarChar(50)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConatctNo", DbType="VarChar(50)")] string conatctNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManagerId", DbType="VarChar(5)")] string managerId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, firstName, lastName, emailId, conatctNo, isActive, managerId, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(7)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdateSubscription", IsComposable=true)]
		public object usp_UpdateSubscription([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> expireDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string receipt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, expireDate, userType, receipt, result);
			result = ((System.Nullable<long>)(result1.GetParameterValue(4)));
			return ((object)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserDiseases_Delete")]
		public int usp_UserDiseases_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserDiseases_Insert")]
		public int usp_UserDiseases_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string diseaseName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, diseaseName, type, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(3)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserDiseases_Select")]
		public ISingleResult<usp_UserDiseases_SelectResult> usp_UserDiseases_Select([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, type);
			return ((ISingleResult<usp_UserDiseases_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserGlaucomaDetails_Details")]
		public ISingleResult<usp_UserGlaucomaDetails_DetailsResult> usp_UserGlaucomaDetails_Details([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<usp_UserGlaucomaDetails_DetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicine_Sync", IsComposable=true)]
		public object usp_UserMedicine_Sync([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> testfield, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string timezone)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId, testfield, timezone).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicine_Sync1", IsComposable=true)]
		public object usp_UserMedicine_Sync1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> testfield)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId, testfield).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicine_Sync11", IsComposable=true)]
		public object usp_UserMedicine_Sync11([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> testfield)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId, testfield).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicine_UpdateSyncDetails")]
		public int usp_UserMedicine_UpdateSyncDetails([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string userMedicineIdStr, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userMedicineIdStr, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(1)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicineDetails")]
		public ISingleResult<usp_UserMedicineDetailsResult> usp_UserMedicineDetails([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userid);
			return ((ISingleResult<usp_UserMedicineDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicines_Add")]
		public int usp_UserMedicines_Add([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> medicineId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string strength, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string size, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eye, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="for", DbType="VarChar(100)")] string @for, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> startingFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> ending, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string image, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string manufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> noOfBottles, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsSync", DbType="Bit")] System.Nullable<bool> isSync, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> duetime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userid, medicineId, strength, size, eye, @for, startingFrom, ending, image, manufacturer, noOfBottles, isSync, duetime, result);
			result = ((System.Nullable<long>)(result1.GetParameterValue(13)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicines_Delete")]
		public int usp_UserMedicines_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicines_RemoveDrug")]
		public int usp_UserMedicines_RemoveDrug([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> usermedicineId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string deleteReason, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsSync", DbType="Bit")] System.Nullable<bool> isSync, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usermedicineId, deleteReason, isSync, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(3)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicines_Select")]
		public ISingleResult<usp_UserMedicines_SelectResult> usp_UserMedicines_Select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> medicineId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, medicineId);
			return ((ISingleResult<usp_UserMedicines_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicines_SelectNew")]
		public ISingleResult<usp_UserMedicines_SelectNewResult> usp_UserMedicines_SelectNew([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dateValue, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, dateValue, date);
			return ((ISingleResult<usp_UserMedicines_SelectNewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicines_SelectRemovedDrug", IsComposable=true)]
		public object usp_UserMedicines_SelectRemovedDrug([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string emailId)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicines_update")]
		public int usp_UserMedicines_update([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> usermedicineId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> medicineId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string strength, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string size, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eye, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="for", DbType="VarChar(100)")] string @for, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> startingFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> ending, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string image, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string manufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> noOfBottles, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsSync", DbType="Bit")] System.Nullable<bool> isSync, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usermedicineId, userid, medicineId, strength, size, eye, @for, startingFrom, ending, image, manufacturer, noOfBottles, isSync, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(13)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicines_UpdateTimings")]
		public int usp_UserMedicines_UpdateTimings([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> usermedicineId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> lasttaken, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> duetime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usermedicineId, lasttaken, duetime, status, date);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicinesByID_Select")]
		public ISingleResult<usp_UserMedicinesByID_SelectResult> usp_UserMedicinesByID_Select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, iD);
			return ((ISingleResult<usp_UserMedicinesByID_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicineSchedule_Add")]
		public int usp_UserMedicineSchedule_Add([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> usermedicineId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> time, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usermedicineId, time, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(2)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicineSchedule_Select")]
		public ISingleResult<usp_UserMedicineSchedule_SelectResult> usp_UserMedicineSchedule_Select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserMedicineID", DbType="Int")] System.Nullable<int> userMedicineID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userMedicineID);
			return ((ISingleResult<usp_UserMedicineSchedule_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserMedicineSchedules_Select")]
		public ISingleResult<usp_UserMedicineSchedules_SelectResult> usp_UserMedicineSchedules_Select([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> usermedicineId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usermedicineId);
			return ((ISingleResult<usp_UserMedicineSchedules_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserPastMedicine_Delete")]
		public int usp_UserPastMedicine_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserPastMedicine_Insert")]
		public int usp_UserPastMedicine_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string medicineName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string reason, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, medicineName, reason, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(3)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UserPastMedicine_Select")]
		public ISingleResult<usp_UserPastMedicine_SelectResult> usp_UserPastMedicine_Select([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<usp_UserPastMedicine_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Users_ForgetPassword", IsComposable=true)]
		public object usp_Users_ForgetPassword([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string email)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Users_ProfileDetail", IsComposable=true)]
		public object usp_Users_ProfileDetail(
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string fname, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string lname, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> gender, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dob, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string doctorName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string doctorEmail, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string state, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string city, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string ethnicity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isDoctor, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string password, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> glaucomaID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string length, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsPet", DbType="Bit")] System.Nullable<bool> isPet, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string timeZone, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, fname, lname, gender, dob, doctorName, doctorEmail, state, city, ethnicity, isDoctor, password, glaucomaID, length, isPet, timeZone, result);
			result = ((System.Nullable<int>)(result1.GetParameterValue(16)));
			return ((object)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Users_UserDetails", IsComposable=true)]
		public object usp_Users_UserDetails([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string email)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppPricing")]
	public partial class AppPricing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Version;
		
		private string _Platform;
		
		private double _Price;
		
		private System.DateTime _AffectiveFrom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnPlatformChanging(string value);
    partial void OnPlatformChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnAffectiveFromChanging(System.DateTime value);
    partial void OnAffectiveFromChanged();
    #endregion
		
		public AppPricing()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="VarChar(20)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Platform
		{
			get
			{
				return this._Platform;
			}
			set
			{
				if ((this._Platform != value))
				{
					this.OnPlatformChanging(value);
					this.SendPropertyChanging();
					this._Platform = value;
					this.SendPropertyChanged("Platform");
					this.OnPlatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffectiveFrom", DbType="DateTime NOT NULL")]
		public System.DateTime AffectiveFrom
		{
			get
			{
				return this._AffectiveFrom;
			}
			set
			{
				if ((this._AffectiveFrom != value))
				{
					this.OnAffectiveFromChanging(value);
					this.SendPropertyChanging();
					this._AffectiveFrom = value;
					this.SendPropertyChanged("AffectiveFrom");
					this.OnAffectiveFromChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConnectedUser")]
	public partial class ConnectedUser
	{
		
		private int _UserId;
		
		private string _SessionSalt;
		
		private string _Session;
		
		private System.DateTime _Expires;
		
		private System.DateTime _LastTime;
		
		public ConnectedUser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionSalt", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SessionSalt
		{
			get
			{
				return this._SessionSalt;
			}
			set
			{
				if ((this._SessionSalt != value))
				{
					this._SessionSalt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Session", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Session
		{
			get
			{
				return this._Session;
			}
			set
			{
				if ((this._Session != value))
				{
					this._Session = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expires", DbType="DateTime2 NOT NULL")]
		public System.DateTime Expires
		{
			get
			{
				return this._Expires;
			}
			set
			{
				if ((this._Expires != value))
				{
					this._Expires = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastTime
		{
			get
			{
				return this._LastTime;
			}
			set
			{
				if ((this._LastTime != value))
				{
					this._LastTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Drug")]
	public partial class Drug : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DrugId;
		
		private string _DrugName;
		
		private int _ManufacturerId;
		
		private int _DrugTypeId;
		
		private EntitySet<Schedule> _Schedules;
		
		private EntityRef<DrugType> _DrugType;
		
		private EntityRef<Manufacturer> _Manufacturer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDrugIdChanging(int value);
    partial void OnDrugIdChanged();
    partial void OnDrugNameChanging(string value);
    partial void OnDrugNameChanged();
    partial void OnManufacturerIdChanging(int value);
    partial void OnManufacturerIdChanged();
    partial void OnDrugTypeIdChanging(int value);
    partial void OnDrugTypeIdChanged();
    #endregion
		
		public Drug()
		{
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			this._DrugType = default(EntityRef<DrugType>);
			this._Manufacturer = default(EntityRef<Manufacturer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DrugId
		{
			get
			{
				return this._DrugId;
			}
			set
			{
				if ((this._DrugId != value))
				{
					this.OnDrugIdChanging(value);
					this.SendPropertyChanging();
					this._DrugId = value;
					this.SendPropertyChanged("DrugId");
					this.OnDrugIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DrugName
		{
			get
			{
				return this._DrugName;
			}
			set
			{
				if ((this._DrugName != value))
				{
					this.OnDrugNameChanging(value);
					this.SendPropertyChanging();
					this._DrugName = value;
					this.SendPropertyChanged("DrugName");
					this.OnDrugNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerId", DbType="Int NOT NULL")]
		public int ManufacturerId
		{
			get
			{
				return this._ManufacturerId;
			}
			set
			{
				if ((this._ManufacturerId != value))
				{
					if (this._Manufacturer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManufacturerIdChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerId = value;
					this.SendPropertyChanged("ManufacturerId");
					this.OnManufacturerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugTypeId", DbType="Int NOT NULL")]
		public int DrugTypeId
		{
			get
			{
				return this._DrugTypeId;
			}
			set
			{
				if ((this._DrugTypeId != value))
				{
					if (this._DrugType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DrugTypeId = value;
					this.SendPropertyChanged("DrugTypeId");
					this.OnDrugTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drug_Schedule", Storage="_Schedules", ThisKey="DrugId", OtherKey="DrugId")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DrugType_Drug", Storage="_DrugType", ThisKey="DrugTypeId", OtherKey="DrugTypeId", IsForeignKey=true)]
		public DrugType DrugType
		{
			get
			{
				return this._DrugType.Entity;
			}
			set
			{
				DrugType previousValue = this._DrugType.Entity;
				if (((previousValue != value) 
							|| (this._DrugType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DrugType.Entity = null;
						previousValue.Drugs.Remove(this);
					}
					this._DrugType.Entity = value;
					if ((value != null))
					{
						value.Drugs.Add(this);
						this._DrugTypeId = value.DrugTypeId;
					}
					else
					{
						this._DrugTypeId = default(int);
					}
					this.SendPropertyChanged("DrugType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Drug", Storage="_Manufacturer", ThisKey="ManufacturerId", OtherKey="ManufacturerId", IsForeignKey=true)]
		public Manufacturer Manufacturer
		{
			get
			{
				return this._Manufacturer.Entity;
			}
			set
			{
				Manufacturer previousValue = this._Manufacturer.Entity;
				if (((previousValue != value) 
							|| (this._Manufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Manufacturer.Entity = null;
						previousValue.Drugs.Remove(this);
					}
					this._Manufacturer.Entity = value;
					if ((value != null))
					{
						value.Drugs.Add(this);
						this._ManufacturerId = value.ManufacturerId;
					}
					else
					{
						this._ManufacturerId = default(int);
					}
					this.SendPropertyChanged("Manufacturer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Drug = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Drug = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrugType")]
	public partial class DrugType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DrugTypeId;
		
		private string _DrugTypeName;
		
		private EntitySet<Drug> _Drugs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDrugTypeIdChanging(int value);
    partial void OnDrugTypeIdChanged();
    partial void OnDrugTypeNameChanging(string value);
    partial void OnDrugTypeNameChanged();
    #endregion
		
		public DrugType()
		{
			this._Drugs = new EntitySet<Drug>(new Action<Drug>(this.attach_Drugs), new Action<Drug>(this.detach_Drugs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DrugTypeId
		{
			get
			{
				return this._DrugTypeId;
			}
			set
			{
				if ((this._DrugTypeId != value))
				{
					this.OnDrugTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DrugTypeId = value;
					this.SendPropertyChanged("DrugTypeId");
					this.OnDrugTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DrugTypeName
		{
			get
			{
				return this._DrugTypeName;
			}
			set
			{
				if ((this._DrugTypeName != value))
				{
					this.OnDrugTypeNameChanging(value);
					this.SendPropertyChanging();
					this._DrugTypeName = value;
					this.SendPropertyChanged("DrugTypeName");
					this.OnDrugTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DrugType_Drug", Storage="_Drugs", ThisKey="DrugTypeId", OtherKey="DrugTypeId")]
		public EntitySet<Drug> Drugs
		{
			get
			{
				return this._Drugs;
			}
			set
			{
				this._Drugs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Drugs(Drug entity)
		{
			this.SendPropertyChanging();
			entity.DrugType = this;
		}
		
		private void detach_Drugs(Drug entity)
		{
			this.SendPropertyChanging();
			entity.DrugType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EyeDiseasesMaster")]
	public partial class EyeDiseasesMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _EyeDiseasesName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEyeDiseasesNameChanging(string value);
    partial void OnEyeDiseasesNameChanged();
    #endregion
		
		public EyeDiseasesMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EyeDiseasesName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EyeDiseasesName
		{
			get
			{
				return this._EyeDiseasesName;
			}
			set
			{
				if ((this._EyeDiseasesName != value))
				{
					this.OnEyeDiseasesNameChanging(value);
					this.SendPropertyChanging();
					this._EyeDiseasesName = value;
					this.SendPropertyChanged("EyeDiseasesName");
					this.OnEyeDiseasesNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EyeSurgeryMaster")]
	public partial class EyeSurgeryMaster
	{
		
		private int _ID;
		
		private string _SurgeryName;
		
		public EyeSurgeryMaster()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SurgeryName
		{
			get
			{
				return this._SurgeryName;
			}
			set
			{
				if ((this._SurgeryName != value))
				{
					this._SurgeryName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GlaucomaTypeMaster")]
	public partial class GlaucomaTypeMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _GlaucomaTypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGlaucomaTypeNameChanging(string value);
    partial void OnGlaucomaTypeNameChanged();
    #endregion
		
		public GlaucomaTypeMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlaucomaTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string GlaucomaTypeName
		{
			get
			{
				return this._GlaucomaTypeName;
			}
			set
			{
				if ((this._GlaucomaTypeName != value))
				{
					this.OnGlaucomaTypeNameChanging(value);
					this.SendPropertyChanging();
					this._GlaucomaTypeName = value;
					this.SendPropertyChanged("GlaucomaTypeName");
					this.OnGlaucomaTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HistoryList")]
	public partial class HistoryList
	{
		
		private long _ID;
		
		private long _ScheduleId;
		
		private System.DateTime _TakenTime;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		public HistoryList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="BigInt NOT NULL")]
		public long ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					this._ScheduleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakenTime", DbType="DateTime NOT NULL")]
		public System.DateTime TakenTime
		{
			get
			{
				return this._TakenTime;
			}
			set
			{
				if ((this._TakenTime != value))
				{
					this._TakenTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HistoryTable")]
	public partial class HistoryTable
	{
		
		private long _ID;
		
		private long _UserMedicineId;
		
		private System.Nullable<System.DateTime> _DueTime;
		
		private System.DateTime _TakenTime;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		public HistoryTable()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMedicineId", DbType="BigInt NOT NULL")]
		public long UserMedicineId
		{
			get
			{
				return this._UserMedicineId;
			}
			set
			{
				if ((this._UserMedicineId != value))
				{
					this._UserMedicineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueTime
		{
			get
			{
				return this._DueTime;
			}
			set
			{
				if ((this._DueTime != value))
				{
					this._DueTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakenTime", DbType="DateTime NOT NULL")]
		public System.DateTime TakenTime
		{
			get
			{
				return this._TakenTime;
			}
			set
			{
				if ((this._TakenTime != value))
				{
					this._TakenTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IOP")]
	public partial class IOP
	{
		
		private long _id;
		
		private long _UserId;
		
		private string _RightEye;
		
		private string _LeftEye;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<bool> _IsDeleted;
		
		public IOP()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightEye", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RightEye
		{
			get
			{
				return this._RightEye;
			}
			set
			{
				if ((this._RightEye != value))
				{
					this._RightEye = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftEye", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LeftEye
		{
			get
			{
				return this._LeftEye;
			}
			set
			{
				if ((this._LeftEye != value))
				{
					this._LeftEye = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this._date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Manager")]
	public partial class Manager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EmailId;
		
		private string _ConatctNo;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _ModfiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailIdChanging(string value);
    partial void OnEmailIdChanged();
    partial void OnConatctNoChanging(string value);
    partial void OnConatctNoChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnModfiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModfiedDateChanged();
    #endregion
		
		public Manager()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this.OnEmailIdChanging(value);
					this.SendPropertyChanging();
					this._EmailId = value;
					this.SendPropertyChanged("EmailId");
					this.OnEmailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConatctNo", DbType="VarChar(50)")]
		public string ConatctNo
		{
			get
			{
				return this._ConatctNo;
			}
			set
			{
				if ((this._ConatctNo != value))
				{
					this.OnConatctNoChanging(value);
					this.SendPropertyChanging();
					this._ConatctNo = value;
					this.SendPropertyChanged("ConatctNo");
					this.OnConatctNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModfiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModfiedDate
		{
			get
			{
				return this._ModfiedDate;
			}
			set
			{
				if ((this._ModfiedDate != value))
				{
					this.OnModfiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModfiedDate = value;
					this.SendPropertyChanged("ModfiedDate");
					this.OnModfiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Manufacturer")]
	public partial class Manufacturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ManufacturerId;
		
		private string _ManufacturerName;
		
		private EntitySet<Drug> _Drugs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManufacturerIdChanging(int value);
    partial void OnManufacturerIdChanged();
    partial void OnManufacturerNameChanging(string value);
    partial void OnManufacturerNameChanged();
    #endregion
		
		public Manufacturer()
		{
			this._Drugs = new EntitySet<Drug>(new Action<Drug>(this.attach_Drugs), new Action<Drug>(this.detach_Drugs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ManufacturerId
		{
			get
			{
				return this._ManufacturerId;
			}
			set
			{
				if ((this._ManufacturerId != value))
				{
					this.OnManufacturerIdChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerId = value;
					this.SendPropertyChanged("ManufacturerId");
					this.OnManufacturerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManufacturerName
		{
			get
			{
				return this._ManufacturerName;
			}
			set
			{
				if ((this._ManufacturerName != value))
				{
					this.OnManufacturerNameChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerName = value;
					this.SendPropertyChanged("ManufacturerName");
					this.OnManufacturerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Drug", Storage="_Drugs", ThisKey="ManufacturerId", OtherKey="ManufacturerId")]
		public EntitySet<Drug> Drugs
		{
			get
			{
				return this._Drugs;
			}
			set
			{
				this._Drugs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Drugs(Drug entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = this;
		}
		
		private void detach_Drugs(Drug entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ManufacturerType")]
	public partial class ManufacturerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public ManufacturerType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicineManufacturer")]
	public partial class MedicineManufacturer
	{
		
		private long _ID;
		
		private string _Manufacturer;
		
		private long _MedicineId;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		public MedicineManufacturer()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this._Manufacturer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineId", DbType="BigInt NOT NULL")]
		public long MedicineId
		{
			get
			{
				return this._MedicineId;
			}
			set
			{
				if ((this._MedicineId != value))
				{
					this._MedicineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicineMaster")]
	public partial class MedicineMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _Manufacturer;
		
		private int _Type;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<bool> _IsEnabled;
		
		private string _ImageName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnIsEnabledChanging(System.Nullable<bool> value);
    partial void OnIsEnabledChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    #endregion
		
		public MedicineMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="VarChar(200)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit")]
		public System.Nullable<bool> IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="VarChar(MAX)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicineSize")]
	public partial class MedicineSize
	{
		
		private long _ID;
		
		private string _Size;
		
		private System.Nullable<int> _NoOfDrops;
		
		private long _MedicineId;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		public MedicineSize()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfDrops", DbType="Int")]
		public System.Nullable<int> NoOfDrops
		{
			get
			{
				return this._NoOfDrops;
			}
			set
			{
				if ((this._NoOfDrops != value))
				{
					this._NoOfDrops = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineId", DbType="BigInt NOT NULL")]
		public long MedicineId
		{
			get
			{
				return this._MedicineId;
			}
			set
			{
				if ((this._MedicineId != value))
				{
					this._MedicineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicineStrength")]
	public partial class MedicineStrength
	{
		
		private long _ID;
		
		private string _Strength;
		
		private long _MedicineId;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		public MedicineStrength()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strength", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineId", DbType="BigInt NOT NULL")]
		public long MedicineId
		{
			get
			{
				return this._MedicineId;
			}
			set
			{
				if ((this._MedicineId != value))
				{
					this._MedicineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicineStrengthSize")]
	public partial class MedicineStrengthSize
	{
		
		private long _medicineId;
		
		private string _strength;
		
		private string _size;
		
		private System.Nullable<int> _noofdrops;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedDate;
		
		private System.Nullable<int> _IsDeleted;
		
		public MedicineStrengthSize()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medicineId", DbType="BigInt NOT NULL")]
		public long medicineId
		{
			get
			{
				return this._medicineId;
			}
			set
			{
				if ((this._medicineId != value))
				{
					this._medicineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strength", DbType="VarChar(100)")]
		public string strength
		{
			get
			{
				return this._strength;
			}
			set
			{
				if ((this._strength != value))
				{
					this._strength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="VarChar(100)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this._size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noofdrops", DbType="Int")]
		public System.Nullable<int> noofdrops
		{
			get
			{
				return this._noofdrops;
			}
			set
			{
				if ((this._noofdrops != value))
				{
					this._noofdrops = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Int")]
		public System.Nullable<int> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Int")]
		public System.Nullable<int> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicineType")]
	public partial class MedicineType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public MedicineType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OtherDiseasesMaster")]
	public partial class OtherDiseasesMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _OtherDisease;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOtherDiseaseChanging(string value);
    partial void OnOtherDiseaseChanged();
    #endregion
		
		public OtherDiseasesMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDisease", DbType="VarChar(100)")]
		public string OtherDisease
		{
			get
			{
				return this._OtherDisease;
			}
			set
			{
				if ((this._OtherDisease != value))
				{
					this.OnOtherDiseaseChanging(value);
					this.SendPropertyChanging();
					this._OtherDisease = value;
					this.SendPropertyChanged("OtherDisease");
					this.OnOtherDiseaseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OtherManufacturer")]
	public partial class OtherManufacturer
	{
		
		private int _ID;
		
		private string _Manufacturer;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		public OtherManufacturer()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this._Manufacturer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesPerson")]
	public partial class SalesPerson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EmailId;
		
		private string _ConatctNo;
		
		private System.Nullable<bool> _IsActive;
		
		private string _SalesRepsCode;
		
		private string _ManagerId;
		
		private System.Nullable<bool> _IsManagerIDChanged;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailIdChanging(string value);
    partial void OnEmailIdChanged();
    partial void OnConatctNoChanging(string value);
    partial void OnConatctNoChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnSalesRepsCodeChanging(string value);
    partial void OnSalesRepsCodeChanged();
    partial void OnManagerIdChanging(string value);
    partial void OnManagerIdChanged();
    partial void OnIsManagerIDChangedChanging(System.Nullable<bool> value);
    partial void OnIsManagerIDChangedChanged();
    #endregion
		
		public SalesPerson()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this.OnEmailIdChanging(value);
					this.SendPropertyChanging();
					this._EmailId = value;
					this.SendPropertyChanged("EmailId");
					this.OnEmailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConatctNo", DbType="VarChar(50)")]
		public string ConatctNo
		{
			get
			{
				return this._ConatctNo;
			}
			set
			{
				if ((this._ConatctNo != value))
				{
					this.OnConatctNoChanging(value);
					this.SendPropertyChanging();
					this._ConatctNo = value;
					this.SendPropertyChanged("ConatctNo");
					this.OnConatctNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesRepsCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SalesRepsCode
		{
			get
			{
				return this._SalesRepsCode;
			}
			set
			{
				if ((this._SalesRepsCode != value))
				{
					this.OnSalesRepsCodeChanging(value);
					this.SendPropertyChanging();
					this._SalesRepsCode = value;
					this.SendPropertyChanged("SalesRepsCode");
					this.OnSalesRepsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="VarChar(5)")]
		public string ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					this.OnManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ManagerId = value;
					this.SendPropertyChanged("ManagerId");
					this.OnManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsManagerIDChanged", DbType="Bit")]
		public System.Nullable<bool> IsManagerIDChanged
		{
			get
			{
				return this._IsManagerIDChanged;
			}
			set
			{
				if ((this._IsManagerIDChanged != value))
				{
					this.OnIsManagerIDChangedChanging(value);
					this.SendPropertyChanging();
					this._IsManagerIDChanged = value;
					this.SendPropertyChanged("IsManagerIDChanged");
					this.OnIsManagerIDChangedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesReport")]
	public partial class SalesReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SalesCode;
		
		private long _UserId;
		
		private double _Amount;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSalesCodeChanging(string value);
    partial void OnSalesCodeChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public SalesReport()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCode", DbType="VarChar(10)")]
		public string SalesCode
		{
			get
			{
				return this._SalesCode;
			}
			set
			{
				if ((this._SalesCode != value))
				{
					this.OnSalesCodeChanging(value);
					this.SendPropertyChanging();
					this._SalesCode = value;
					this.SendPropertyChanged("SalesCode");
					this.OnSalesCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedule")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _DrugId;
		
		private bool _IsMyDrug;
		
		private string _DrugFor;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _ScheduleId;
		
		private EntityRef<Drug> _Drug;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnDrugIdChanging(int value);
    partial void OnDrugIdChanged();
    partial void OnIsMyDrugChanging(bool value);
    partial void OnIsMyDrugChanged();
    partial void OnDrugForChanging(string value);
    partial void OnDrugForChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnScheduleIdChanging(int value);
    partial void OnScheduleIdChanged();
    #endregion
		
		public Schedule()
		{
			this._Drug = default(EntityRef<Drug>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugId", DbType="Int NOT NULL")]
		public int DrugId
		{
			get
			{
				return this._DrugId;
			}
			set
			{
				if ((this._DrugId != value))
				{
					if (this._Drug.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIdChanging(value);
					this.SendPropertyChanging();
					this._DrugId = value;
					this.SendPropertyChanged("DrugId");
					this.OnDrugIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMyDrug", DbType="Bit NOT NULL")]
		public bool IsMyDrug
		{
			get
			{
				return this._IsMyDrug;
			}
			set
			{
				if ((this._IsMyDrug != value))
				{
					this.OnIsMyDrugChanging(value);
					this.SendPropertyChanging();
					this._IsMyDrug = value;
					this.SendPropertyChanged("IsMyDrug");
					this.OnIsMyDrugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugFor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DrugFor
		{
			get
			{
				return this._DrugFor;
			}
			set
			{
				if ((this._DrugFor != value))
				{
					this.OnDrugForChanging(value);
					this.SendPropertyChanging();
					this._DrugFor = value;
					this.SendPropertyChanged("DrugFor");
					this.OnDrugForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drug_Schedule", Storage="_Drug", ThisKey="DrugId", OtherKey="DrugId", IsForeignKey=true)]
		public Drug Drug
		{
			get
			{
				return this._Drug.Entity;
			}
			set
			{
				Drug previousValue = this._Drug.Entity;
				if (((previousValue != value) 
							|| (this._Drug.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Drug.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._Drug.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._DrugId = value.DrugId;
					}
					else
					{
						this._DrugId = default(int);
					}
					this.SendPropertyChanged("Drug");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Schedule", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleItem")]
	public partial class ScheduleItem
	{
		
		private int _ScheduleId;
		
		private System.DateTime _TimeScheduled;
		
		private bool _Taken;
		
		private bool _TakenOnTime;
		
		private string _TimeTaken;
		
		public ScheduleItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int NOT NULL")]
		public int ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					this._ScheduleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeScheduled", DbType="DateTime2 NOT NULL")]
		public System.DateTime TimeScheduled
		{
			get
			{
				return this._TimeScheduled;
			}
			set
			{
				if ((this._TimeScheduled != value))
				{
					this._TimeScheduled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taken", DbType="Bit NOT NULL")]
		public bool Taken
		{
			get
			{
				return this._Taken;
			}
			set
			{
				if ((this._Taken != value))
				{
					this._Taken = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakenOnTime", DbType="Bit NOT NULL")]
		public bool TakenOnTime
		{
			get
			{
				return this._TakenOnTime;
			}
			set
			{
				if ((this._TakenOnTime != value))
				{
					this._TakenOnTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeTaken", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string TimeTaken
		{
			get
			{
				return this._TimeTaken;
			}
			set
			{
				if ((this._TimeTaken != value))
				{
					this._TimeTaken = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Surgery")]
	public partial class Surgery
	{
		
		private long _id;
		
		private long _UserId;
		
		private string _SurgeryName;
		
		private int _Eye;
		
		private System.DateTime _SurgeryDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		public Surgery()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SurgeryName
		{
			get
			{
				return this._SurgeryName;
			}
			set
			{
				if ((this._SurgeryName != value))
				{
					this._SurgeryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eye", DbType="Int NOT NULL")]
		public int Eye
		{
			get
			{
				return this._Eye;
			}
			set
			{
				if ((this._Eye != value))
				{
					this._Eye = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryDate", DbType="DateTime NOT NULL")]
		public System.DateTime SurgeryDate
		{
			get
			{
				return this._SurgeryDate;
			}
			set
			{
				if ((this._SurgeryDate != value))
				{
					this._SurgeryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _Username;
		
		private string _Email;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Password;
		
		private bool _Gender;
		
		private EntitySet<Schedule> _Schedules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnGenderChanging(bool value);
    partial void OnGenderChanged();
    #endregion
		
		public User()
		{
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Schedule", Storage="_Schedules", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserDiseases")]
	public partial class UserDisease
	{
		
		private long _ID;
		
		private long _UserId;
		
		private string _DiseaseName;
		
		private System.Nullable<int> _Type;
		
		private bool _IsDeleted;
		
		public UserDisease()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiseaseName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string DiseaseName
		{
			get
			{
				return this._DiseaseName;
			}
			set
			{
				if ((this._DiseaseName != value))
				{
					this._DiseaseName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGlaucomaDetails")]
	public partial class UserGlaucomaDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _UserId;
		
		private System.Nullable<int> _GlaucomaID;
		
		private string _Length;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnGlaucomaIDChanging(System.Nullable<int> value);
    partial void OnGlaucomaIDChanged();
    partial void OnLengthChanging(string value);
    partial void OnLengthChanged();
    #endregion
		
		public UserGlaucomaDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlaucomaID", DbType="Int")]
		public System.Nullable<int> GlaucomaID
		{
			get
			{
				return this._GlaucomaID;
			}
			set
			{
				if ((this._GlaucomaID != value))
				{
					this.OnGlaucomaIDChanging(value);
					this.SendPropertyChanging();
					this._GlaucomaID = value;
					this.SendPropertyChanged("GlaucomaID");
					this.OnGlaucomaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="VarChar(20)")]
		public string Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMedicines")]
	public partial class UserMedicine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _MedicineID;
		
		private long _UserID;
		
		private string _Strength;
		
		private string _Size;
		
		private int _Eye;
		
		private string _OnBehalf;
		
		private string _Manufacturer;
		
		private int _NoOfBottles;
		
		private System.DateTime _StartingFrom;
		
		private System.Nullable<System.DateTime> _Ending;
		
		private string _ImageData;
		
		private System.Nullable<System.DateTime> _LastTaken;
		
		private System.Nullable<System.DateTime> _DueTime;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _DeleteReason;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<bool> _IsEnabled;
		
		private System.Nullable<bool> _IsSync;
		
		private System.Nullable<System.DateTime> _LastSyncDate;
		
		private System.Nullable<bool> _IsOther;
		
		private string _MedName;
		
		private string _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnMedicineIDChanging(long value);
    partial void OnMedicineIDChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnStrengthChanging(string value);
    partial void OnStrengthChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnEyeChanging(int value);
    partial void OnEyeChanged();
    partial void OnOnBehalfChanging(string value);
    partial void OnOnBehalfChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnNoOfBottlesChanging(int value);
    partial void OnNoOfBottlesChanged();
    partial void OnStartingFromChanging(System.DateTime value);
    partial void OnStartingFromChanged();
    partial void OnEndingChanging(System.Nullable<System.DateTime> value);
    partial void OnEndingChanged();
    partial void OnImageDataChanging(string value);
    partial void OnImageDataChanged();
    partial void OnLastTakenChanging(System.Nullable<System.DateTime> value);
    partial void OnLastTakenChanged();
    partial void OnDueTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDueTimeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnDeleteReasonChanging(string value);
    partial void OnDeleteReasonChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnIsEnabledChanging(System.Nullable<bool> value);
    partial void OnIsEnabledChanged();
    partial void OnIsSyncChanging(System.Nullable<bool> value);
    partial void OnIsSyncChanged();
    partial void OnLastSyncDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSyncDateChanged();
    partial void OnIsOtherChanging(System.Nullable<bool> value);
    partial void OnIsOtherChanged();
    partial void OnMedNameChanging(string value);
    partial void OnMedNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public UserMedicine()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineID", DbType="BigInt NOT NULL")]
		public long MedicineID
		{
			get
			{
				return this._MedicineID;
			}
			set
			{
				if ((this._MedicineID != value))
				{
					this.OnMedicineIDChanging(value);
					this.SendPropertyChanging();
					this._MedicineID = value;
					this.SendPropertyChanged("MedicineID");
					this.OnMedicineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strength", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eye", DbType="Int NOT NULL")]
		public int Eye
		{
			get
			{
				return this._Eye;
			}
			set
			{
				if ((this._Eye != value))
				{
					this.OnEyeChanging(value);
					this.SendPropertyChanging();
					this._Eye = value;
					this.SendPropertyChanged("Eye");
					this.OnEyeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnBehalf", DbType="VarChar(100)")]
		public string OnBehalf
		{
			get
			{
				return this._OnBehalf;
			}
			set
			{
				if ((this._OnBehalf != value))
				{
					this.OnOnBehalfChanging(value);
					this.SendPropertyChanging();
					this._OnBehalf = value;
					this.SendPropertyChanged("OnBehalf");
					this.OnOnBehalfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfBottles", DbType="Int NOT NULL")]
		public int NoOfBottles
		{
			get
			{
				return this._NoOfBottles;
			}
			set
			{
				if ((this._NoOfBottles != value))
				{
					this.OnNoOfBottlesChanging(value);
					this.SendPropertyChanging();
					this._NoOfBottles = value;
					this.SendPropertyChanged("NoOfBottles");
					this.OnNoOfBottlesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingFrom", DbType="DateTime NOT NULL")]
		public System.DateTime StartingFrom
		{
			get
			{
				return this._StartingFrom;
			}
			set
			{
				if ((this._StartingFrom != value))
				{
					this.OnStartingFromChanging(value);
					this.SendPropertyChanging();
					this._StartingFrom = value;
					this.SendPropertyChanged("StartingFrom");
					this.OnStartingFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ending", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ending
		{
			get
			{
				return this._Ending;
			}
			set
			{
				if ((this._Ending != value))
				{
					this.OnEndingChanging(value);
					this.SendPropertyChanging();
					this._Ending = value;
					this.SendPropertyChanged("Ending");
					this.OnEndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageData", DbType="VarChar(MAX)")]
		public string ImageData
		{
			get
			{
				return this._ImageData;
			}
			set
			{
				if ((this._ImageData != value))
				{
					this.OnImageDataChanging(value);
					this.SendPropertyChanging();
					this._ImageData = value;
					this.SendPropertyChanged("ImageData");
					this.OnImageDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTaken", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastTaken
		{
			get
			{
				return this._LastTaken;
			}
			set
			{
				if ((this._LastTaken != value))
				{
					this.OnLastTakenChanging(value);
					this.SendPropertyChanging();
					this._LastTaken = value;
					this.SendPropertyChanged("LastTaken");
					this.OnLastTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueTime
		{
			get
			{
				return this._DueTime;
			}
			set
			{
				if ((this._DueTime != value))
				{
					this.OnDueTimeChanging(value);
					this.SendPropertyChanging();
					this._DueTime = value;
					this.SendPropertyChanged("DueTime");
					this.OnDueTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteReason", DbType="VarChar(100)")]
		public string DeleteReason
		{
			get
			{
				return this._DeleteReason;
			}
			set
			{
				if ((this._DeleteReason != value))
				{
					this.OnDeleteReasonChanging(value);
					this.SendPropertyChanging();
					this._DeleteReason = value;
					this.SendPropertyChanged("DeleteReason");
					this.OnDeleteReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit")]
		public System.Nullable<bool> IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit")]
		public System.Nullable<bool> IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this.OnIsSyncChanging(value);
					this.SendPropertyChanging();
					this._IsSync = value;
					this.SendPropertyChanged("IsSync");
					this.OnIsSyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSyncDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastSyncDate
		{
			get
			{
				return this._LastSyncDate;
			}
			set
			{
				if ((this._LastSyncDate != value))
				{
					this.OnLastSyncDateChanging(value);
					this.SendPropertyChanging();
					this._LastSyncDate = value;
					this.SendPropertyChanged("LastSyncDate");
					this.OnLastSyncDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOther", DbType="Bit")]
		public System.Nullable<bool> IsOther
		{
			get
			{
				return this._IsOther;
			}
			set
			{
				if ((this._IsOther != value))
				{
					this.OnIsOtherChanging(value);
					this.SendPropertyChanging();
					this._IsOther = value;
					this.SendPropertyChanged("IsOther");
					this.OnIsOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedName", DbType="VarChar(100)")]
		public string MedName
		{
			get
			{
				return this._MedName;
			}
			set
			{
				if ((this._MedName != value))
				{
					this.OnMedNameChanging(value);
					this.SendPropertyChanging();
					this._MedName = value;
					this.SendPropertyChanged("MedName");
					this.OnMedNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(100)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMedicineSchedule")]
	public partial class UserMedicineSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _UserMedicineID;
		
		private System.DateTime _Time;
		
		private bool _IsDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserMedicineIDChanging(long value);
    partial void OnUserMedicineIDChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public UserMedicineSchedule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMedicineID", DbType="BigInt NOT NULL")]
		public long UserMedicineID
		{
			get
			{
				return this._UserMedicineID;
			}
			set
			{
				if ((this._UserMedicineID != value))
				{
					this.OnUserMedicineIDChanging(value);
					this.SendPropertyChanging();
					this._UserMedicineID = value;
					this.SendPropertyChanged("UserMedicineID");
					this.OnUserMedicineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMedicineScheduleData")]
	public partial class UserMedicineScheduleData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _ScheduleID;
		
		private System.DateTime _TakenTime;
		
		private string _IsCalcuted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnScheduleIDChanging(long value);
    partial void OnScheduleIDChanged();
    partial void OnTakenTimeChanging(System.DateTime value);
    partial void OnTakenTimeChanged();
    partial void OnIsCalcutedChanging(string value);
    partial void OnIsCalcutedChanged();
    #endregion
		
		public UserMedicineScheduleData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="BigInt NOT NULL")]
		public long ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakenTime", DbType="DateTime NOT NULL")]
		public System.DateTime TakenTime
		{
			get
			{
				return this._TakenTime;
			}
			set
			{
				if ((this._TakenTime != value))
				{
					this.OnTakenTimeChanging(value);
					this.SendPropertyChanging();
					this._TakenTime = value;
					this.SendPropertyChanged("TakenTime");
					this.OnTakenTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCalcuted", DbType="VarChar(10)")]
		public string IsCalcuted
		{
			get
			{
				return this._IsCalcuted;
			}
			set
			{
				if ((this._IsCalcuted != value))
				{
					this.OnIsCalcutedChanging(value);
					this.SendPropertyChanging();
					this._IsCalcuted = value;
					this.SendPropertyChanged("IsCalcuted");
					this.OnIsCalcutedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPastMedicine")]
	public partial class UserPastMedicine
	{
		
		private long _ID;
		
		private long _UserId;
		
		private System.Nullable<long> _MedicineID;
		
		private string _MedicineName;
		
		private string _Reason;
		
		private System.Nullable<bool> _IsDeleted;
		
		public UserPastMedicine()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineID", DbType="BigInt")]
		public System.Nullable<long> MedicineID
		{
			get
			{
				return this._MedicineID;
			}
			set
			{
				if ((this._MedicineID != value))
				{
					this._MedicineID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineName", DbType="VarChar(100)")]
		public string MedicineName
		{
			get
			{
				return this._MedicineName;
			}
			set
			{
				if ((this._MedicineName != value))
				{
					this._MedicineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this._Reason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserType")]
	public partial class UserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public UserType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Select_MedicineInfoResult
	{
		
		private string _Name;
		
		private string _Strength;
		
		private string _Type;
		
		private string _Size;
		
		public Select_MedicineInfoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strength", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
	}
	
	public partial class SP_InnerResult
	{
		
		private System.Nullable<long> _UserId;
		
		private long _UserMedicineId;
		
		private System.Nullable<System.DateTime> _DueTime;
		
		private System.Nullable<System.DateTime> _LastTaken;
		
		private string _MedicineName;
		
		private string _MedName;
		
		private string _OnBehalf;
		
		private System.Nullable<System.DateTime> _StartingFrom;
		
		private System.Nullable<System.DateTime> _Ending;
		
		private string _ImageData;
		
		public SP_InnerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMedicineId", DbType="BigInt NOT NULL")]
		public long UserMedicineId
		{
			get
			{
				return this._UserMedicineId;
			}
			set
			{
				if ((this._UserMedicineId != value))
				{
					this._UserMedicineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueTime
		{
			get
			{
				return this._DueTime;
			}
			set
			{
				if ((this._DueTime != value))
				{
					this._DueTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTaken", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastTaken
		{
			get
			{
				return this._LastTaken;
			}
			set
			{
				if ((this._LastTaken != value))
				{
					this._LastTaken = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineName", DbType="VarChar(8000)")]
		public string MedicineName
		{
			get
			{
				return this._MedicineName;
			}
			set
			{
				if ((this._MedicineName != value))
				{
					this._MedicineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedName", DbType="VarChar(8000)")]
		public string MedName
		{
			get
			{
				return this._MedName;
			}
			set
			{
				if ((this._MedName != value))
				{
					this._MedName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnBehalf", DbType="VarChar(100)")]
		public string OnBehalf
		{
			get
			{
				return this._OnBehalf;
			}
			set
			{
				if ((this._OnBehalf != value))
				{
					this._OnBehalf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartingFrom
		{
			get
			{
				return this._StartingFrom;
			}
			set
			{
				if ((this._StartingFrom != value))
				{
					this._StartingFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ending", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ending
		{
			get
			{
				return this._Ending;
			}
			set
			{
				if ((this._Ending != value))
				{
					this._Ending = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageData", DbType="VarChar(MAX)")]
		public string ImageData
		{
			get
			{
				return this._ImageData;
			}
			set
			{
				if ((this._ImageData != value))
				{
					this._ImageData = value;
				}
			}
		}
	}
	
	public partial class usp_AppPricing_GetAllResult
	{
		
		private int _Id;
		
		private string _Version;
		
		private string _Platform;
		
		private double _Price;
		
		private System.DateTime _AffectiveFrom;
		
		public usp_AppPricing_GetAllResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="VarChar(20)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Platform
		{
			get
			{
				return this._Platform;
			}
			set
			{
				if ((this._Platform != value))
				{
					this._Platform = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffectiveFrom", DbType="DateTime NOT NULL")]
		public System.DateTime AffectiveFrom
		{
			get
			{
				return this._AffectiveFrom;
			}
			set
			{
				if ((this._AffectiveFrom != value))
				{
					this._AffectiveFrom = value;
				}
			}
		}
	}
	
	public partial class usp_EyeDiseaseMaster_SelectResult
	{
		
		private int _ID;
		
		private string _EyeDiseasesName;
		
		public usp_EyeDiseaseMaster_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EyeDiseasesName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EyeDiseasesName
		{
			get
			{
				return this._EyeDiseasesName;
			}
			set
			{
				if ((this._EyeDiseasesName != value))
				{
					this._EyeDiseasesName = value;
				}
			}
		}
	}
	
	public partial class usp_EyeSurgeryMaster_SelectResult
	{
		
		private int _ID;
		
		private string _SurgeryName;
		
		public usp_EyeSurgeryMaster_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SurgeryName
		{
			get
			{
				return this._SurgeryName;
			}
			set
			{
				if ((this._SurgeryName != value))
				{
					this._SurgeryName = value;
				}
			}
		}
	}
	
	public partial class usp_GetAppPriceByIdResult
	{
		
		private int _Id;
		
		private string _Version;
		
		private string _Platform;
		
		private double _Price;
		
		private System.DateTime _AffectiveFrom;
		
		public usp_GetAppPriceByIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="VarChar(20)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Platform
		{
			get
			{
				return this._Platform;
			}
			set
			{
				if ((this._Platform != value))
				{
					this._Platform = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffectiveFrom", DbType="DateTime NOT NULL")]
		public System.DateTime AffectiveFrom
		{
			get
			{
				return this._AffectiveFrom;
			}
			set
			{
				if ((this._AffectiveFrom != value))
				{
					this._AffectiveFrom = value;
				}
			}
		}
	}
	
	public partial class usp_GetManagerWithIdResult
	{
		
		private int _Id;
		
		private string _FirstName;
		
		public usp_GetManagerWithIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(83)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
	}
	
	public partial class usp_GetMangerByIdResult
	{
		
		private int _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EmailId;
		
		private string _ConatctNo;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _ModfiedDate;
		
		public usp_GetMangerByIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this._EmailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConatctNo", DbType="VarChar(50)")]
		public string ConatctNo
		{
			get
			{
				return this._ConatctNo;
			}
			set
			{
				if ((this._ConatctNo != value))
				{
					this._ConatctNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModfiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModfiedDate
		{
			get
			{
				return this._ModfiedDate;
			}
			set
			{
				if ((this._ModfiedDate != value))
				{
					this._ModfiedDate = value;
				}
			}
		}
	}
	
	public partial class usp_GetSAlesPersonByIdResult
	{
		
		private int _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EmailId;
		
		private string _ConatctNo;
		
		private System.Nullable<bool> _IsActive;
		
		private string _SalesRepsCode;
		
		private string _ManagerId;
		
		private System.Nullable<bool> _IsManagerIDChanged;
		
		public usp_GetSAlesPersonByIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this._EmailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConatctNo", DbType="VarChar(50)")]
		public string ConatctNo
		{
			get
			{
				return this._ConatctNo;
			}
			set
			{
				if ((this._ConatctNo != value))
				{
					this._ConatctNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesRepsCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SalesRepsCode
		{
			get
			{
				return this._SalesRepsCode;
			}
			set
			{
				if ((this._SalesRepsCode != value))
				{
					this._SalesRepsCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="VarChar(5)")]
		public string ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					this._ManagerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsManagerIDChanged", DbType="Bit")]
		public System.Nullable<bool> IsManagerIDChanged
		{
			get
			{
				return this._IsManagerIDChanged;
			}
			set
			{
				if ((this._IsManagerIDChanged != value))
				{
					this._IsManagerIDChanged = value;
				}
			}
		}
	}
	
	public partial class usp_GlaucomaMAster_SelectResult
	{
		
		private int _ID;
		
		private string _GlaucomaTypeName;
		
		public usp_GlaucomaMAster_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlaucomaTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string GlaucomaTypeName
		{
			get
			{
				return this._GlaucomaTypeName;
			}
			set
			{
				if ((this._GlaucomaTypeName != value))
				{
					this._GlaucomaTypeName = value;
				}
			}
		}
	}
	
	public partial class usp_HistoryList_FilterByDateResult
	{
		
		private string _Name;
		
		private System.DateTime _TakenTime;
		
		private string _Status;
		
		private System.DateTime _Due_Time;
		
		public usp_HistoryList_FilterByDateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakenTime", DbType="DateTime NOT NULL")]
		public System.DateTime TakenTime
		{
			get
			{
				return this._TakenTime;
			}
			set
			{
				if ((this._TakenTime != value))
				{
					this._TakenTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Due Time]", Storage="_Due_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Due_Time
		{
			get
			{
				return this._Due_Time;
			}
			set
			{
				if ((this._Due_Time != value))
				{
					this._Due_Time = value;
				}
			}
		}
	}
	
	public partial class usp_HistoryTable_FilterByDateResult
	{
		
		private string _Name;
		
		private System.DateTime _TakenTime;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _Due_Time;
		
		public usp_HistoryTable_FilterByDateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakenTime", DbType="DateTime NOT NULL")]
		public System.DateTime TakenTime
		{
			get
			{
				return this._TakenTime;
			}
			set
			{
				if ((this._TakenTime != value))
				{
					this._TakenTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Due Time]", Storage="_Due_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Due_Time
		{
			get
			{
				return this._Due_Time;
			}
			set
			{
				if ((this._Due_Time != value))
				{
					this._Due_Time = value;
				}
			}
		}
	}
	
	public partial class usp_IOP_FilterByDateResult
	{
		
		private string _RightEye;
		
		private string _LeftEye;
		
		private System.Nullable<System.DateTime> _date;
		
		public usp_IOP_FilterByDateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightEye", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RightEye
		{
			get
			{
				return this._RightEye;
			}
			set
			{
				if ((this._RightEye != value))
				{
					this._RightEye = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftEye", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LeftEye
		{
			get
			{
				return this._LeftEye;
			}
			set
			{
				if ((this._LeftEye != value))
				{
					this._LeftEye = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this._date = value;
				}
			}
		}
	}
	
	public partial class usp_IOP_InsertResult
	{
		
		private int _Column1;
		
		public usp_IOP_InsertResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class usp_IOP_ViewResult
	{
		
		private string _RightEye;
		
		private string _LeftEye;
		
		private System.Nullable<System.DateTime> _date;
		
		public usp_IOP_ViewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightEye", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RightEye
		{
			get
			{
				return this._RightEye;
			}
			set
			{
				if ((this._RightEye != value))
				{
					this._RightEye = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftEye", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LeftEye
		{
			get
			{
				return this._LeftEye;
			}
			set
			{
				if ((this._LeftEye != value))
				{
					this._LeftEye = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this._date = value;
				}
			}
		}
	}
	
	public partial class usp_Manager_GetAllResult
	{
		
		private int _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EmailId;
		
		private string _ConatctNo;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _ModfiedDate;
		
		public usp_Manager_GetAllResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this._EmailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConatctNo", DbType="VarChar(50)")]
		public string ConatctNo
		{
			get
			{
				return this._ConatctNo;
			}
			set
			{
				if ((this._ConatctNo != value))
				{
					this._ConatctNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModfiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModfiedDate
		{
			get
			{
				return this._ModfiedDate;
			}
			set
			{
				if ((this._ModfiedDate != value))
				{
					this._ModfiedDate = value;
				}
			}
		}
	}
	
	public partial class usp_MedicineMaster_ManufacturerResult
	{
		
		private System.Nullable<long> _ID;
		
		private string _Manufacturer;
		
		public usp_MedicineMaster_ManufacturerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt")]
		public System.Nullable<long> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this._Manufacturer = value;
				}
			}
		}
	}
	
	public partial class usp_MedicineMaster_MedicineIdResult
	{
		
		private long _ID;
		
		public usp_MedicineMaster_MedicineIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	public partial class usp_MedicineMaster_SelectIdResult
	{
		
		private long _ID;
		
		private string _Name;
		
		private string _Manufacturer;
		
		private int _Type;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<bool> _IsEnabled;
		
		private string _ImageName;
		
		public usp_MedicineMaster_SelectIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="VarChar(200)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this._Manufacturer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit")]
		public System.Nullable<bool> IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this._IsEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="VarChar(MAX)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this._ImageName = value;
				}
			}
		}
	}
	
	public partial class usp_MedicineMaster_SelectListResult
	{
		
		private string _Name;
		
		public usp_MedicineMaster_SelectListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class usp_MedicineScheduleTimingsResult
	{
		
		private string _MedicineName;
		
		private string _Time;
		
		public usp_MedicineScheduleTimingsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MedicineName
		{
			get
			{
				return this._MedicineName;
			}
			set
			{
				if ((this._MedicineName != value))
				{
					this._MedicineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="VarChar(5)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
	}
	
	public partial class usp_MedicineSize_SizeResult
	{
		
		private long _ID;
		
		private string _Size;
		
		public usp_MedicineSize_SizeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
	}
	
	public partial class usp_MedicineStrength_StrengthResult
	{
		
		private long _ID;
		
		private string _Strength;
		
		public usp_MedicineStrength_StrengthResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strength", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	public partial class usp_MedicineStrengthSize_SizeResult
	{
		
		private string _size;
		
		private System.Nullable<int> _noofdrops;
		
		public usp_MedicineStrengthSize_SizeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="VarChar(100)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this._size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noofdrops", DbType="Int")]
		public System.Nullable<int> noofdrops
		{
			get
			{
				return this._noofdrops;
			}
			set
			{
				if ((this._noofdrops != value))
				{
					this._noofdrops = value;
				}
			}
		}
	}
	
	public partial class usp_MedicineStrengthSize_StrengthResult
	{
		
		private string _strength;
		
		public usp_MedicineStrengthSize_StrengthResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strength", DbType="VarChar(100)")]
		public string strength
		{
			get
			{
				return this._strength;
			}
			set
			{
				if ((this._strength != value))
				{
					this._strength = value;
				}
			}
		}
	}
	
	public partial class usp_MedicineStrengthSize_StrengthSizeResult
	{
		
		private string _strength;
		
		private string _size;
		
		public usp_MedicineStrengthSize_StrengthSizeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strength", DbType="VarChar(100)")]
		public string strength
		{
			get
			{
				return this._strength;
			}
			set
			{
				if ((this._strength != value))
				{
					this._strength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="VarChar(100)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this._size = value;
				}
			}
		}
	}
	
	public partial class usp_MedicineType_TypeResult
	{
		
		private int _ID;
		
		private string _Type;
		
		public usp_MedicineType_TypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
	}
	
	public partial class usp_MedicineType_TypeIdResult
	{
		
		private int _ID;
		
		public usp_MedicineType_TypeIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	public partial class usp_MyMedsDataResult
	{
		
		private long _ID;
		
		private string _ImageData;
		
		private string _OnBehalf;
		
		private string _MedicineName;
		
		private System.Nullable<bool> _IsOther;
		
		private string _MedName;
		
		public usp_MyMedsDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageData", DbType="VarChar(MAX)")]
		public string ImageData
		{
			get
			{
				return this._ImageData;
			}
			set
			{
				if ((this._ImageData != value))
				{
					this._ImageData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnBehalf", DbType="VarChar(100)")]
		public string OnBehalf
		{
			get
			{
				return this._OnBehalf;
			}
			set
			{
				if ((this._OnBehalf != value))
				{
					this._OnBehalf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineName", DbType="VarChar(100)")]
		public string MedicineName
		{
			get
			{
				return this._MedicineName;
			}
			set
			{
				if ((this._MedicineName != value))
				{
					this._MedicineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOther", DbType="Bit")]
		public System.Nullable<bool> IsOther
		{
			get
			{
				return this._IsOther;
			}
			set
			{
				if ((this._IsOther != value))
				{
					this._IsOther = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedName", DbType="VarChar(100)")]
		public string MedName
		{
			get
			{
				return this._MedName;
			}
			set
			{
				if ((this._MedName != value))
				{
					this._MedName = value;
				}
			}
		}
	}
	
	public partial class usp_OtherDisease_SelectResult
	{
		
		private int _ID;
		
		private string _OtherDisease;
		
		public usp_OtherDisease_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDisease", DbType="VarChar(100)")]
		public string OtherDisease
		{
			get
			{
				return this._OtherDisease;
			}
			set
			{
				if ((this._OtherDisease != value))
				{
					this._OtherDisease = value;
				}
			}
		}
	}
	
	public partial class usp_Sales_GetAllResult
	{
		
		private int _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EmailId;
		
		private string _ConatctNo;
		
		private System.Nullable<bool> _IsActive;
		
		private string _SalesRepsCode;
		
		private string _ManagerId;
		
		private System.Nullable<bool> _IsManagerIDChanged;
		
		public usp_Sales_GetAllResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this._EmailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConatctNo", DbType="VarChar(50)")]
		public string ConatctNo
		{
			get
			{
				return this._ConatctNo;
			}
			set
			{
				if ((this._ConatctNo != value))
				{
					this._ConatctNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesRepsCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SalesRepsCode
		{
			get
			{
				return this._SalesRepsCode;
			}
			set
			{
				if ((this._SalesRepsCode != value))
				{
					this._SalesRepsCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="VarChar(5)")]
		public string ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					this._ManagerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsManagerIDChanged", DbType="Bit")]
		public System.Nullable<bool> IsManagerIDChanged
		{
			get
			{
				return this._IsManagerIDChanged;
			}
			set
			{
				if ((this._IsManagerIDChanged != value))
				{
					this._IsManagerIDChanged = value;
				}
			}
		}
	}
	
	public partial class usp_SalesReportResult
	{
		
		private string _SalesPersonName;
		
		private string _ManagerName;
		
		private string _SalesCode;
		
		private System.Nullable<int> _TotalCount;
		
		private System.Nullable<double> _Amount;
		
		public usp_SalesReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPersonName", DbType="VarChar(101)")]
		public string SalesPersonName
		{
			get
			{
				return this._SalesPersonName;
			}
			set
			{
				if ((this._SalesPersonName != value))
				{
					this._SalesPersonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerName", DbType="VarChar(101)")]
		public string ManagerName
		{
			get
			{
				return this._ManagerName;
			}
			set
			{
				if ((this._ManagerName != value))
				{
					this._ManagerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCode", DbType="VarChar(10)")]
		public string SalesCode
		{
			get
			{
				return this._SalesCode;
			}
			set
			{
				if ((this._SalesCode != value))
				{
					this._SalesCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCount", DbType="Int")]
		public System.Nullable<int> TotalCount
		{
			get
			{
				return this._TotalCount;
			}
			set
			{
				if ((this._TotalCount != value))
				{
					this._TotalCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
	}
	
	public partial class usp_SelectMedicineImagesResult
	{
		
		private string _ImageName;
		
		public usp_SelectMedicineImagesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="VarChar(MAX)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this._ImageName = value;
				}
			}
		}
	}
	
	public partial class usp_SelectPrevDayDataResult
	{
		
		private long _UserMedicineId;
		
		private System.Nullable<System.DateTime> _DueTime;
		
		private System.Nullable<System.DateTime> _LastTaken;
		
		private string _Status;
		
		private string _Name;
		
		private string _MedName;
		
		private string _OnBehalf;
		
		private System.Nullable<System.DateTime> _StartingFrom;
		
		private System.Nullable<System.DateTime> _Ending;
		
		private string _ImageData;
		
		public usp_SelectPrevDayDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMedicineId", DbType="BigInt NOT NULL")]
		public long UserMedicineId
		{
			get
			{
				return this._UserMedicineId;
			}
			set
			{
				if ((this._UserMedicineId != value))
				{
					this._UserMedicineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueTime
		{
			get
			{
				return this._DueTime;
			}
			set
			{
				if ((this._DueTime != value))
				{
					this._DueTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTaken", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastTaken
		{
			get
			{
				return this._LastTaken;
			}
			set
			{
				if ((this._LastTaken != value))
				{
					this._LastTaken = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(8000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedName", DbType="VarChar(8000)")]
		public string MedName
		{
			get
			{
				return this._MedName;
			}
			set
			{
				if ((this._MedName != value))
				{
					this._MedName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnBehalf", DbType="VarChar(100)")]
		public string OnBehalf
		{
			get
			{
				return this._OnBehalf;
			}
			set
			{
				if ((this._OnBehalf != value))
				{
					this._OnBehalf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartingFrom
		{
			get
			{
				return this._StartingFrom;
			}
			set
			{
				if ((this._StartingFrom != value))
				{
					this._StartingFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ending", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ending
		{
			get
			{
				return this._Ending;
			}
			set
			{
				if ((this._Ending != value))
				{
					this._Ending = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageData", DbType="VarChar(MAX)")]
		public string ImageData
		{
			get
			{
				return this._ImageData;
			}
			set
			{
				if ((this._ImageData != value))
				{
					this._ImageData = value;
				}
			}
		}
	}
	
	public partial class usp_SelectTimeSchedulesResult
	{
		
		private System.DateTime _Time;
		
		private long _UserMedicineID;
		
		public usp_SelectTimeSchedulesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMedicineID", DbType="BigInt NOT NULL")]
		public long UserMedicineID
		{
			get
			{
				return this._UserMedicineID;
			}
			set
			{
				if ((this._UserMedicineID != value))
				{
					this._UserMedicineID = value;
				}
			}
		}
	}
	
	public partial class usp_SelectTodayTabDataResult
	{
		
		private string _MedicineName;
		
		private string _OnBehalf;
		
		private System.DateTime _StartingFrom;
		
		private System.Nullable<System.DateTime> _Ending;
		
		private string _Status;
		
		private string _ImageData;
		
		private System.Nullable<System.DateTime> _LastTaken;
		
		private System.Nullable<bool> _IsOther;
		
		private string _MedName;
		
		private string _Time;
		
		public usp_SelectTodayTabDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineName", DbType="VarChar(100)")]
		public string MedicineName
		{
			get
			{
				return this._MedicineName;
			}
			set
			{
				if ((this._MedicineName != value))
				{
					this._MedicineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnBehalf", DbType="VarChar(100)")]
		public string OnBehalf
		{
			get
			{
				return this._OnBehalf;
			}
			set
			{
				if ((this._OnBehalf != value))
				{
					this._OnBehalf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingFrom", DbType="DateTime NOT NULL")]
		public System.DateTime StartingFrom
		{
			get
			{
				return this._StartingFrom;
			}
			set
			{
				if ((this._StartingFrom != value))
				{
					this._StartingFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ending", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ending
		{
			get
			{
				return this._Ending;
			}
			set
			{
				if ((this._Ending != value))
				{
					this._Ending = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageData", DbType="VarChar(MAX)")]
		public string ImageData
		{
			get
			{
				return this._ImageData;
			}
			set
			{
				if ((this._ImageData != value))
				{
					this._ImageData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTaken", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastTaken
		{
			get
			{
				return this._LastTaken;
			}
			set
			{
				if ((this._LastTaken != value))
				{
					this._LastTaken = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOther", DbType="Bit")]
		public System.Nullable<bool> IsOther
		{
			get
			{
				return this._IsOther;
			}
			set
			{
				if ((this._IsOther != value))
				{
					this._IsOther = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedName", DbType="VarChar(100)")]
		public string MedName
		{
			get
			{
				return this._MedName;
			}
			set
			{
				if ((this._MedName != value))
				{
					this._MedName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(MAX)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
	}
	
	public partial class usp_Surgery_ViewResult
	{
		
		private long _id;
		
		private string _SurgeryName;
		
		private int _Eye;
		
		private System.DateTime _SurgeryDate;
		
		public usp_Surgery_ViewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL")]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SurgeryName
		{
			get
			{
				return this._SurgeryName;
			}
			set
			{
				if ((this._SurgeryName != value))
				{
					this._SurgeryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eye", DbType="Int NOT NULL")]
		public int Eye
		{
			get
			{
				return this._Eye;
			}
			set
			{
				if ((this._Eye != value))
				{
					this._Eye = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryDate", DbType="DateTime NOT NULL")]
		public System.DateTime SurgeryDate
		{
			get
			{
				return this._SurgeryDate;
			}
			set
			{
				if ((this._SurgeryDate != value))
				{
					this._SurgeryDate = value;
				}
			}
		}
	}
	
	public partial class usp_UserDiseases_SelectResult
	{
		
		private long _ID;
		
		private long _UserId;
		
		private string _DiseaseName;
		
		private System.Nullable<int> _Type;
		
		private bool _IsDeleted;
		
		public usp_UserDiseases_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiseaseName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string DiseaseName
		{
			get
			{
				return this._DiseaseName;
			}
			set
			{
				if ((this._DiseaseName != value))
				{
					this._DiseaseName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
	}
	
	public partial class usp_UserGlaucomaDetails_DetailsResult
	{
		
		private long _ID;
		
		private System.Nullable<long> _UserId;
		
		private System.Nullable<int> _GlaucomaID;
		
		private string _Length;
		
		public usp_UserGlaucomaDetails_DetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlaucomaID", DbType="Int")]
		public System.Nullable<int> GlaucomaID
		{
			get
			{
				return this._GlaucomaID;
			}
			set
			{
				if ((this._GlaucomaID != value))
				{
					this._GlaucomaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="VarChar(20)")]
		public string Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this._Length = value;
				}
			}
		}
	}
	
	public partial class usp_UserMedicineDetailsResult
	{
		
		private string _MedicineName;
		
		private string _ImageData;
		
		private System.Nullable<System.DateTime> _DueTime;
		
		private System.Nullable<System.DateTime> _LastTaken;
		
		private string _OnBehalf;
		
		public usp_UserMedicineDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MedicineName
		{
			get
			{
				return this._MedicineName;
			}
			set
			{
				if ((this._MedicineName != value))
				{
					this._MedicineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageData", DbType="VarChar(MAX)")]
		public string ImageData
		{
			get
			{
				return this._ImageData;
			}
			set
			{
				if ((this._ImageData != value))
				{
					this._ImageData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueTime
		{
			get
			{
				return this._DueTime;
			}
			set
			{
				if ((this._DueTime != value))
				{
					this._DueTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTaken", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastTaken
		{
			get
			{
				return this._LastTaken;
			}
			set
			{
				if ((this._LastTaken != value))
				{
					this._LastTaken = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnBehalf", DbType="VarChar(100)")]
		public string OnBehalf
		{
			get
			{
				return this._OnBehalf;
			}
			set
			{
				if ((this._OnBehalf != value))
				{
					this._OnBehalf = value;
				}
			}
		}
	}
	
	public partial class usp_UserMedicines_SelectResult
	{
		
		private string _MedicineName;
		
		private long _ID;
		
		private long _MedicineID;
		
		private long _UserID;
		
		private string _Strength;
		
		private string _Size;
		
		private int _Eye;
		
		private string _OnBehalf;
		
		private string _Manufacturer;
		
		private int _NoOfBottles;
		
		private System.DateTime _StartingFrom;
		
		private System.Nullable<System.DateTime> _Ending;
		
		private string _ImageData;
		
		private System.Nullable<System.DateTime> _LastTaken;
		
		private System.Nullable<System.DateTime> _DueTime;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _DeleteReason;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<bool> _IsEnabled;
		
		private System.Nullable<bool> _IsSync;
		
		private System.Nullable<System.DateTime> _LastSyncDate;
		
		private System.Nullable<bool> _IsOther;
		
		private string _MedName;
		
		private string _Type;
		
		public usp_UserMedicines_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineName", DbType="VarChar(100)")]
		public string MedicineName
		{
			get
			{
				return this._MedicineName;
			}
			set
			{
				if ((this._MedicineName != value))
				{
					this._MedicineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineID", DbType="BigInt NOT NULL")]
		public long MedicineID
		{
			get
			{
				return this._MedicineID;
			}
			set
			{
				if ((this._MedicineID != value))
				{
					this._MedicineID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strength", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eye", DbType="Int NOT NULL")]
		public int Eye
		{
			get
			{
				return this._Eye;
			}
			set
			{
				if ((this._Eye != value))
				{
					this._Eye = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnBehalf", DbType="VarChar(100)")]
		public string OnBehalf
		{
			get
			{
				return this._OnBehalf;
			}
			set
			{
				if ((this._OnBehalf != value))
				{
					this._OnBehalf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this._Manufacturer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfBottles", DbType="Int NOT NULL")]
		public int NoOfBottles
		{
			get
			{
				return this._NoOfBottles;
			}
			set
			{
				if ((this._NoOfBottles != value))
				{
					this._NoOfBottles = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingFrom", DbType="DateTime NOT NULL")]
		public System.DateTime StartingFrom
		{
			get
			{
				return this._StartingFrom;
			}
			set
			{
				if ((this._StartingFrom != value))
				{
					this._StartingFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ending", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ending
		{
			get
			{
				return this._Ending;
			}
			set
			{
				if ((this._Ending != value))
				{
					this._Ending = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageData", DbType="VarChar(MAX)")]
		public string ImageData
		{
			get
			{
				return this._ImageData;
			}
			set
			{
				if ((this._ImageData != value))
				{
					this._ImageData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTaken", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastTaken
		{
			get
			{
				return this._LastTaken;
			}
			set
			{
				if ((this._LastTaken != value))
				{
					this._LastTaken = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueTime
		{
			get
			{
				return this._DueTime;
			}
			set
			{
				if ((this._DueTime != value))
				{
					this._DueTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteReason", DbType="VarChar(100)")]
		public string DeleteReason
		{
			get
			{
				return this._DeleteReason;
			}
			set
			{
				if ((this._DeleteReason != value))
				{
					this._DeleteReason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit")]
		public System.Nullable<bool> IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this._IsEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit")]
		public System.Nullable<bool> IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this._IsSync = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSyncDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastSyncDate
		{
			get
			{
				return this._LastSyncDate;
			}
			set
			{
				if ((this._LastSyncDate != value))
				{
					this._LastSyncDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOther", DbType="Bit")]
		public System.Nullable<bool> IsOther
		{
			get
			{
				return this._IsOther;
			}
			set
			{
				if ((this._IsOther != value))
				{
					this._IsOther = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedName", DbType="VarChar(100)")]
		public string MedName
		{
			get
			{
				return this._MedName;
			}
			set
			{
				if ((this._MedName != value))
				{
					this._MedName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(100)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
	}
	
	public partial class usp_UserMedicines_SelectNewResult
	{
		
		private string _MedicineName;
		
		private string _DueAt;
		
		private string _OnBehalf;
		
		private string _ImageData;
		
		private System.Nullable<System.DateTime> _LastTaken;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _Ending;
		
		private System.DateTime _StartingFrom;
		
		public usp_UserMedicines_SelectNewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineName", DbType="VarChar(100)")]
		public string MedicineName
		{
			get
			{
				return this._MedicineName;
			}
			set
			{
				if ((this._MedicineName != value))
				{
					this._MedicineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueAt", DbType="VarChar(5)")]
		public string DueAt
		{
			get
			{
				return this._DueAt;
			}
			set
			{
				if ((this._DueAt != value))
				{
					this._DueAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnBehalf", DbType="VarChar(100)")]
		public string OnBehalf
		{
			get
			{
				return this._OnBehalf;
			}
			set
			{
				if ((this._OnBehalf != value))
				{
					this._OnBehalf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageData", DbType="VarChar(MAX)")]
		public string ImageData
		{
			get
			{
				return this._ImageData;
			}
			set
			{
				if ((this._ImageData != value))
				{
					this._ImageData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTaken", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastTaken
		{
			get
			{
				return this._LastTaken;
			}
			set
			{
				if ((this._LastTaken != value))
				{
					this._LastTaken = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ending", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ending
		{
			get
			{
				return this._Ending;
			}
			set
			{
				if ((this._Ending != value))
				{
					this._Ending = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingFrom", DbType="DateTime NOT NULL")]
		public System.DateTime StartingFrom
		{
			get
			{
				return this._StartingFrom;
			}
			set
			{
				if ((this._StartingFrom != value))
				{
					this._StartingFrom = value;
				}
			}
		}
	}
	
	public partial class usp_UserMedicinesByID_SelectResult
	{
		
		private long _ID;
		
		private long _MedicineID;
		
		private long _UserID;
		
		private string _Strength;
		
		private string _Size;
		
		private int _Eye;
		
		private string _OnBehalf;
		
		private string _Manufacturer;
		
		private int _NoOfBottles;
		
		private System.DateTime _StartingFrom;
		
		private System.Nullable<System.DateTime> _Ending;
		
		private string _ImageData;
		
		private System.Nullable<System.DateTime> _LastTaken;
		
		private System.Nullable<System.DateTime> _DueTime;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _DeleteReason;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<bool> _IsEnabled;
		
		private System.Nullable<bool> _IsSync;
		
		private System.Nullable<System.DateTime> _LastSyncDate;
		
		private System.Nullable<bool> _IsOther;
		
		private string _MedName;
		
		private string _Type;
		
		public usp_UserMedicinesByID_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineID", DbType="BigInt NOT NULL")]
		public long MedicineID
		{
			get
			{
				return this._MedicineID;
			}
			set
			{
				if ((this._MedicineID != value))
				{
					this._MedicineID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strength", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eye", DbType="Int NOT NULL")]
		public int Eye
		{
			get
			{
				return this._Eye;
			}
			set
			{
				if ((this._Eye != value))
				{
					this._Eye = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnBehalf", DbType="VarChar(100)")]
		public string OnBehalf
		{
			get
			{
				return this._OnBehalf;
			}
			set
			{
				if ((this._OnBehalf != value))
				{
					this._OnBehalf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this._Manufacturer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfBottles", DbType="Int NOT NULL")]
		public int NoOfBottles
		{
			get
			{
				return this._NoOfBottles;
			}
			set
			{
				if ((this._NoOfBottles != value))
				{
					this._NoOfBottles = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingFrom", DbType="DateTime NOT NULL")]
		public System.DateTime StartingFrom
		{
			get
			{
				return this._StartingFrom;
			}
			set
			{
				if ((this._StartingFrom != value))
				{
					this._StartingFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ending", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ending
		{
			get
			{
				return this._Ending;
			}
			set
			{
				if ((this._Ending != value))
				{
					this._Ending = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageData", DbType="VarChar(MAX)")]
		public string ImageData
		{
			get
			{
				return this._ImageData;
			}
			set
			{
				if ((this._ImageData != value))
				{
					this._ImageData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTaken", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastTaken
		{
			get
			{
				return this._LastTaken;
			}
			set
			{
				if ((this._LastTaken != value))
				{
					this._LastTaken = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueTime
		{
			get
			{
				return this._DueTime;
			}
			set
			{
				if ((this._DueTime != value))
				{
					this._DueTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteReason", DbType="VarChar(100)")]
		public string DeleteReason
		{
			get
			{
				return this._DeleteReason;
			}
			set
			{
				if ((this._DeleteReason != value))
				{
					this._DeleteReason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit")]
		public System.Nullable<bool> IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this._IsEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit")]
		public System.Nullable<bool> IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this._IsSync = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSyncDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastSyncDate
		{
			get
			{
				return this._LastSyncDate;
			}
			set
			{
				if ((this._LastSyncDate != value))
				{
					this._LastSyncDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOther", DbType="Bit")]
		public System.Nullable<bool> IsOther
		{
			get
			{
				return this._IsOther;
			}
			set
			{
				if ((this._IsOther != value))
				{
					this._IsOther = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedName", DbType="VarChar(100)")]
		public string MedName
		{
			get
			{
				return this._MedName;
			}
			set
			{
				if ((this._MedName != value))
				{
					this._MedName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(100)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
	}
	
	public partial class usp_UserMedicineSchedule_SelectResult
	{
		
		private System.DateTime _Time;
		
		public usp_UserMedicineSchedule_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
	}
	
	public partial class usp_UserMedicineSchedules_SelectResult
	{
		
		private long _ID;
		
		private long _UserMedicineID;
		
		private System.DateTime _Time;
		
		private bool _IsDeleted;
		
		public usp_UserMedicineSchedules_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMedicineID", DbType="BigInt NOT NULL")]
		public long UserMedicineID
		{
			get
			{
				return this._UserMedicineID;
			}
			set
			{
				if ((this._UserMedicineID != value))
				{
					this._UserMedicineID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
	}
	
	public partial class usp_UserPastMedicine_SelectResult
	{
		
		private long _ID;
		
		private string _Name;
		
		private string _Reason;
		
		public usp_UserPastMedicine_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this._Reason = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
